<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sk.eadmin.biz.admin.adapter.persistance.mapper.CustomerProblemCommandMapper">

	<resultMap id="findCustomerProblemTiketMap" type="CustomerProblemTicketEntity">
	    <result property="registID" column="reg_id"/>
	    <result property="ticketCustomerInfo.customerName" column="cust_nm"/>
	    <result property="ticketCustomerInfo.customerMobile" column="cust_mbl"/>
	    <result property="requestDescription" column="req_desc"/>
	    <result property="problemCategory" column="prbm_cd"/>
	    <result property="problemDegree.degree" column="prbm_dgr"/>
	    <result property="progressStatus" column="prgs_sts"/>
	</resultMap>
	
	<resultMap id="findCustomerProblemAgentMap" type="CustomerProblemAgentEntity">
	    <result property="agentID" column="agnt_id"/>
	    <result property="agentName" column="agnt_nm"/>
	    <result property="agentRegion" column="agnt_regn_cd"/>
	    <result property="agentIcon" column="agnt_icn"/>    
	</resultMap>

	<insert id="addCustomerProblemRegist" parameterType="CustomerProblemTicketEntity">
		INSERT INTO reg_cust_prbm
			(cust_nm, cust_mbl, req_desc, prbm_cd, prbm_dgr, prgs_sts, crte_id, crte_dttm, updt_id, updt_dttm)
		VALUES
			(
				#{ticketCustomerInfo.customerName}
				, #{ticketCustomerInfo.customerMobile}
				, #{requestDescription}
				, #{problemCategory}
				, #{problemDegree.degree}
				, #{progressStatus}
				, #{createdBy}
				, CURRENT_TIMESTAMP
				, #{updatedBy}
				, CURRENT_TIMESTAMP				
			);
	</insert>
	
	<update id="modifyCustomerProblemRegist" parameterType="CustomerProblemTicketEntity">
		UPDATE reg_cust_prbm
		<set>
			<if test="ticketCustomerInfo.customerName != null">		, cust_nm	=	#{ticketCustomerInfo.customerName}</if>
			<if test="ticketCustomerInfo.customerMobile != null">	, cust_mbl	=	#{ticketCustomerInfo.customerMobile}</if>
			<if test="requestDescription != null">					, req_desc	=	#{requestDescription}</if>
			<if test="problemCategory != null">						, prbm_cd	=	#{problemCategory}</if>
			<if test="problemDegree.degree != null">				, prbm_dgr	=	#{problemDegree.degree}</if>
			<if test="updatedBy != null">							, updt_id	=	#{updatedBy}</if>
			, updt_dttm	=	CURRENT_TIMESTAMP
		</set>
		WHERE 
			reg_id = #{registID}
	</update>	
	
	<delete id="deleteCustomerProblemRegist" parameterType="long">
		DELETE FROM reg_cust_prbm 
		WHERE 
			reg_id = #{registID}
	</delete>

	<select id="findCustomerProblemTicketById" parameterType="long" resultMap="findCustomerProblemTiketMap">
		SELECT /* CustomerProblemMapper.findCustomerProblemTicketById */
			A.reg_id
			, A.cust_nm 
			, A.cust_mbl 
			, A.req_desc 
			, A.prbm_cd
			, A.prbm_dgr
			, A.prgs_sts
		FROM reg_cust_prbm A
		WHERE 
			A.reg_id = #{id}
	</select>
	
	<select id="findCustomerProblemTicketByCustomerMobile" parameterType="string" resultMap="findCustomerProblemTiketMap">
		SELECT /* CustomerProblemMapper.findCustomerProblemTicketByCustomerMobile */
			A.reg_id
			, A.cust_nm 
			, A.cust_mbl 
			, A.req_desc 
			, A.prbm_cd
			, A.prbm_dgr
			, A.prgs_sts
		FROM reg_cust_prbm A
		WHERE 
			A.cust_mbl = #{mobile}
	</select>
	
	<select id="findAvailableAgent" resultMap="findCustomerProblemAgentMap">
		SELECT /* CustomerProblemMapper.findAvailableAgent */
			A.agnt_id
			, A.agnt_nm
			, A.agnt_regn_cd
			, A.agnt_icn
		FROM prbm_cust_agnt A
		WHERE
			A.agnt_regn_cd is not null
	</select>

</mapper>
